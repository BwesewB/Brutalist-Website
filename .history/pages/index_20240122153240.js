import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useState } from "react";



export default function Home() {

  const[input,setInput] = useState(); //stores value based on input. this input is coming from input field. whever number changes the onChange will send it back to this


  const classFilters = {
    // key : Value
    1: 'Magician', //1 is key, 'magician' is value
    2: 'Theif',
    4: 'Warrior',
    8: 'Bowman',
    16: 'Pirate',
    32: 'Nothing'
  }
                                    //input = 2 flagValue == 2. Basically if these two values are BOTH true, it will change BG colour to yellow
                                    /* 
                                      input = 3 flagValue = 2
                                        if the input is 3, the closest flag value is 2, so it outputs 2
                                      input = 1 flagValue = 1
                                        it has one left over and it needs to satisfy three so it uses th flagValue of 1
                                    */

const getClassStyle = flagValue => (input & flagValue) > 0 ? { backgroundColor: 'yellow'} : null; //flag value is an item that is passed over??. This uses the ternarary operator "?"

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        header area
      </header>
      <main className={`${styles.main}`}>
        <input
          id="input"
          type="text"
          placeholder="bitmask decimal value"
          value={input}
          onChange={event => setInput(event.target.value)}
        />
        <table> 
          <tbody>
            {
              Object.keys(classFilters).map(item => ( //map finds individual items. Object.keys relates to the keys found inside (classFilters) like 1, 2, 4 e.t.c. .map loops through the keys one number at a time to see which one fits
                <tr key={item} style={getClassStyle(item)}>
                  <td>{item}</td> 
                  <td>{classFilters[item]}</td>
                </tr>
              ))  // item displays number on the screen
            }
          </tbody>
        </table>
      </main>
      <footer>
        Footer Area
      </footer>
    </>
  );
}

/*        <div>
          <div  style={
            number == 1 ? { backgroundColor: 'red' } :        
            number == 2 ? { backgroundColor: 'blue' } :
            { backgroundColor: 'transparent' }              //This means if none of the above is displayed the default will be transparent. Similar to if statements and switch
          }>
              {number}
          </div>
          <button onClick={() => setNumber(number + 1)}>Increment</button>
          <button onClick={() => setNumber(number - 1)}>Decrement</button>
        </div> */